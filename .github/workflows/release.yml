name: Build Tauri Release

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src-tauri/Cargo.toml'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      version_changed: ${{ steps.check_version.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(node -p "require('./src-tauri/tauri.conf.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: check_version
        run: |
          # Get the previous version
          git checkout HEAD~1 src-tauri/tauri.conf.json 2>/dev/null || echo "First commit"
          PREV_VERSION=$(node -p "require('./src-tauri/tauri.conf.json').version" 2>/dev/null || echo "0.0.0")

          # Restore current version
          git checkout HEAD src-tauri/tauri.conf.json
          CURR_VERSION=$(node -p "require('./src-tauri/tauri.conf.json').version")

          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $CURR_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged ($CURR_VERSION)"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  build-tauri:
    permissions:
      contents: write
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs
            args: '--target x86_64-apple-darwin'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install npm dependencies
        run: deno i

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Home Assistant Simple Tray v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          args: ${{ matrix.args }}
