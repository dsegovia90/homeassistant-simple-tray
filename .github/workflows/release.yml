name: Build Tauri Release

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src-tauri/Cargo.toml'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check_version.outputs.changed }}
      version: ${{ steps.check_version.outputs.version }}
      prev_version: ${{ steps.check_version.outputs.prev_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Check Cargo.toml version
        id: version_check
        uses: radumarias/action-check-version-changed-rust@v1
        with:
          working-directory: ./src-tauri
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    permissions:
      contents: write
    needs: check-version
    if: needs.check-version.outputs.changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs
            args: '--target x86_64-apple-darwin'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install npm dependencies
        run: deno i

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Home Assistant Simple Tray v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          args: ${{ matrix.args }}
